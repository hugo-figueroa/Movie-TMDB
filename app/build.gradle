plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
}

android {
    namespace 'com.example.simplemovieapp'

    defaultConfig {
        applicationId libraryGroupId
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    flavorDimensions "version"
    productFlavors {
        develop {
            applicationId libraryGroupIdDev
            resValue "string", "app_name", "Movie TMDB Dev"
            versionNameSuffix "-dev"
            dimension "version"
        }

        production {
            resValue "string", "app_name", "Movie TMDB"
            dimension "version"
        }
    }

    buildTypes {
        debug {
            // Enables code shrinking, obfuscation, and optimization for only
            // your project's release build type.
            minifyEnabled false
            // Enables resource shrinking, which is performed by the
            // Android Gradle plugin.
            shrinkResources false
            // Includes the default ProGuard rules files that are packaged with
            // the Android Gradle plugin. To learn more, go to the section about
            // R8 configuration files.
            proguardFiles getDefaultProguardFile(
                    'proguard-android-optimize.txt'),
                    'proguard-rules.pro'
        }
        release {
            // Enables code shrinking, obfuscation, and optimization for only
            // your project's release build type.
            minifyEnabled true
            // Enables resource shrinking, which is performed by the
            // Android Gradle plugin.
            shrinkResources true
            // Includes the default ProGuard rules files that are packaged with
            // the Android Gradle plugin. To learn more, go to the section about
            // R8 configuration files.
            proguardFiles getDefaultProguardFile(
                    'proguard-android-optimize.txt'),
                    'proguard-rules.pro'
        }
    }

    buildFeatures {
        viewBinding = true
        buildConfig true
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion "$composeVersion"
    }
}

dependencies {
    implementation project(':core')
    implementation project(':material')
    implementation project(':networking')

    implementation "androidx.core:core-ktx:$coreKtxVersion"
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    testImplementation "junit:junit:$jUnitVersion"
    androidTestImplementation "androidx.test.ext:junit:$jUnitImplementation"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoCoreVersion"

    // Dagger Hilt
    implementation "com.google.dagger:hilt-android:$hiltVersion"
    kapt "com.google.dagger:hilt-compiler:$hiltVersion"

    // Integration with activities
    api "androidx.activity:activity-compose:$activityCompose"

    // Integration with ViewModels
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$viewmodelCompose"
    implementation "androidx.compose.runtime:runtime-livedata:$composeVersion"

    // Retrofit
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$retrofitCorutinesVersion"

    // Room
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    annotationProcessor "androidx.room:room-compiler:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
}